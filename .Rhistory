#Specify correlation variables
#Create character vector of sociodemographic variables
correlation_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation",
"phq.sum_score",
"gad.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder"
)
#Select correlation variables
glad_coping_participation_corr <- glad_coping_participation %>%
select(all_of(correlation_variable_names))
#Get correlations
all.corr.mat <- glad_coping_participation_corr %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix <- as.matrix(all.corr.mat)
all.corr.matrix
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15 | >= .15), ]
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15 | all.corr.matrix >= .15), ]
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15 |all.corr.matrix >= .15), ]
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15) | which(all.corr.matrix >= .15), ]
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15), ]
which(all.corr.matrix <= -.15)
all.corr.matrix <- as_tibble(all.corr.mat)
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.mat_sociodemographic$correlations
cor_df <- as.data.frame(as.table(all.corr.mat_sociodemographic$correlations))
cor_df
cor_df <- as.data.frame(as.table(all.corr.mat_sociodemographic$correlations))
#Filter correlations
cor_df_subset <- cor_df  %>%
arrange(desc(Freq)) %>%
filter(Freq <= -0.15 |
Freq >= 0.15)
cor_df_subset
#Filter correlations
cor_df_subset <- cor_df  %>%
arrange(desc(Freq)) %>%
filter(Freq <= -0.15 |
Freq >= 0.15 &
Freq != 1)
cor_df_subset
all.corr.matrix_test <- as.matrix(cor_df_subset)
all.corr.matrix_test
knitr::opts_chunk$set(echo = TRUE)
remove(list = ls())
#install.packages("cowplot")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("gtsummary")
#install.packages("corrplot")
#install.packages("polycor")
#install.packages("tidyverse")
library(cowplot)
library(grid)
library(gridExtra)
library(gtsummary)
library(corrplot)
library(polycor)
library(tidyverse)
glad_coping_palette2 <- c("#EFC10B", "#B7DEE8")
glad_coping_palette3 <- c("#EFC10B", "#B7DEE8", "#0403ff")
source("..//COPING_participation_functions.r")
source("..//COPING_participation_paths.r")
glad_coping_participation <- read_rds(paste0(processed_data_path, processed_data_name))
#Check data
glad_coping_participation %>%
head()
age_completed_baseline_plot <- glad_coping_participation %>%
ggplot(aes(x = age_groups_labelled, fill = completed_baseline_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Age (years)",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 70, vjust = 0.5)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
age_completed_baseline_plot
gender_completed_baseline_plot <- glad_coping_participation %>%
filter(gender_recode_labelled != "Non-binary/prefer to self-define") %>%
ggplot(aes(x = gender_recode_labelled, fill = completed_baseline_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Gender",
y = "N participants") +
ylim(0, 20000) +
scale_fill_manual(values = glad_coping_palette2) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
gender_completed_baseline_plot
employment_labels <- c(
"Employed",
"Retired",
"Looking after home/family",
"NA (disability/sickness)",
"Unemployed",
"Unpaid/voluntary work",
"Student",
"None"
)
employment_plot <- glad_coping_participation %>%
drop_na(employment_labelled) %>%
ggplot(aes(x = employment_labelled, fill = completed_baseline_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Employment status",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 3),
labels = employment_labels) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
employment_plot
ethnicity_plot <- glad_coping_participation %>%
drop_na(ethnicity_labelled) %>%
ggplot(aes(x = ethnicity_labelled, fill = completed_baseline_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Ethnic identity",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
ethnicity_plot
#Create ethnicity minority table grouped by COPING baseline completion status
ethnic_minortiy_COPING_baseline_table <- glad_coping_participation %>%
select(ethnicity_labelled, completed_baseline_labelled) %>%
filter(ethnicity_labelled != "White") %>%
group_by(ethnicity_labelled, completed_baseline_labelled) %>%
count()
#Create plot
ethnic_minority_plot <- ethnic_minortiy_COPING_baseline_table %>%
ggplot(aes(x = ethnicity_labelled, y = n, fill = completed_baseline_labelled)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ethnic minority identity",
y = "N participants") +
ylim(0, 600) +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme_classic() +
theme(legend.position = "top",
legend.margin = margin(0),
legend.title = element_blank(),
legend.text = element_text(size = 8.5)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
geom_text(aes(label = n),
position = position_dodge(width=0.9),
vjust=-0.25,
size = 3)
#Check plot
ethnic_minority_plot
plot_layout_matrix <- matrix(c(1, 1, 2, 3, 3, 4), nrow = 2, byrow = TRUE)
#See matrix
plot_layout_matrix
demographics_completed_baseline_plot <- grid.arrange(ethnic_minority_plot,
age_completed_baseline_plot,
employment_plot,
gender_completed_baseline_plot,
layout_matrix = plot_layout_matrix,
nrow = 2,
bottom = textGrob("Non-binary/Self-defined: Did/Did not complete baseline (244; 457)", x = 1,
hjust = 1,
gp = gpar(fontface = 3L, fontsize = 9)))
age_group_COPING_waves_plot <- glad_coping_participation %>%
ggplot(aes(x = age_groups_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Age (years)",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette3) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 70, vjust = 0.5)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
age_group_COPING_waves_plot
gender_COPING_waves_plot <- glad_coping_participation %>%
filter(gender_recode_labelled != "Non-binary/prefer to self-define") %>%
ggplot(aes(x = gender_recode_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Gender",
y = "N participants") +
ylim(0, 20000) +
scale_fill_manual(values = glad_coping_palette2) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
gender_COPING_waves_plot
employment_COPING_waves_plot <- glad_coping_participation %>%
drop_na(employment_labelled) %>%
ggplot(aes(x = employment_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Employment status",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 3),
labels = employment_labels) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
employment_COPING_waves_plot
ethnicity_COPING_waves_plot <- glad_coping_participation %>%
drop_na(ethnicity_labelled) %>%
ggplot(aes(x = ethnicity_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Ethnic identity",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
ethnicity_COPING_waves_plot
#Get ethnic minority table grouped by total COPING waves group
ethnic_minortiy_COPING_followups_table <- glad_coping_participation %>%
select(ethnicity_labelled, total_COPING_waves_binary_labelled) %>%
filter(ethnicity_labelled != "White") %>%
group_by(ethnicity_labelled, total_COPING_waves_binary_labelled) %>%
count()
#Create ethnic minority/total COPING waves group plot
ethnic_minority_COPING_waves_plot <- ethnic_minortiy_COPING_followups_table %>%
ggplot(aes(x = ethnicity_labelled, y = n, fill = total_COPING_waves_binary_labelled)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ethnic minority identity",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
theme(legend.position = "top",
legend.margin = margin(0),
legend.title = element_blank(),
legend.text = element_text(size = 8.5)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
geom_text(aes(label = n),
position = position_dodge(width=0.9),
vjust=-0.25,
size = 3) +
theme(plot.margin = margin(t = 10, unit = "pt")) + ## pad "t"op region of the plot
coord_cartesian(clip = "off")
#Check plot
ethnic_minority_COPING_waves_plot
COPING_waves_layout_matrix <- matrix(c(1, 1, 2, 3, 3, 4), nrow = 2, byrow = TRUE)
#See matrix
COPING_waves_layout_matrix
demographics_COPING_waves_plot <- grid.arrange(ethnic_minority_COPING_waves_plot,
age_group_COPING_waves_plot,
employment_COPING_waves_plot,
gender_COPING_waves_plot,
layout_matrix = COPING_waves_layout_matrix,
nrow = 2)
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
#Select correlation variables
correlation_vars_data <- glad_coping_participation %>%
select(all_of(correlation_vars))
correlation_vars <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation",
"phq.sum_score",
"gad.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder"
)
#Select correlation variables
correlation_vars_data <- glad_coping_participation %>%
select(all_of(correlation_vars))
#Get correlations
all.corr.mat <- correlation_vars_data %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix <- as.matrix(all.corr.mat)
all.p.matrix <- as.matrix(all.corr.mat$tests)
all.corr.matrix %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_psychiatric_and_health, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank")
all.corr.matrix %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank")
all.corr.matrix %>%
corrplot(tl.cex = 0.5)
all.corr.matrix %>%
corrplot(tl.cex = 0.5,
diag = FALSE)
all.corr.matrix %>%
corrplot(tl.cex = 0.5,
diag = FALSE,
type = "lower")
all.corr.matrix %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank")
all.corr.matrix %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
number.cex = 0.75,
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank")
all.corr.matrix %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
number.cex = 0.5,
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank")
correlation_vars <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation",
"phq.sum_score",
"gad.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",,
"mhd.ptsd",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder"
)
correlation_vars <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation",
"phq.sum_score",
"gad.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",
"mhd.ptsd",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder"
)
#Select correlation variables
correlation_vars_data <- glad_coping_participation %>%
select(all_of(correlation_vars))
#Get correlations
all.corr.mat <- correlation_vars_data %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix <- as.matrix(all.corr.mat)
all.p.matrix <- as.matrix(all.corr.mat$tests)
all.corr.matrix %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
number.cex = 0.5,
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank")
