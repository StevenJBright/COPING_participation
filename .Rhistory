gender_COPING_waves_plot,
layout_matrix = COPING_waves_layout_matrix,
nrow = 2)
#Create ethnic minority/total COPING waves group plot
ethnic_minority_COPING_waves_plot <- ethnic_minortiy_COPING_followups_table %>%
ggplot(aes(x = ethnicity_labelled, y = n, fill = total_COPING_waves_binary_labelled)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ethnic minority identity",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
theme(legend.position = "top",
legend.margin = margin(0),
legend.title = element_blank(),
legend.text = element_text(size = 8.5)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
geom_text(aes(label = n),
position = position_dodge(width=0.9),
vjust=-0.25,
size = 3) +
theme(plot.margin = margin(t = 10, unit = "pt")) + ## pad "t"op region of the plot
coord_cartesian(clip = "off")
#Check plot
ethnic_minority_COPING_waves_plot
demographics_COPING_waves_plot <- grid.arrange(ethnic_minority_COPING_waves_plot,
age_group_COPING_waves_plot,
employment_COPING_waves_plot,
gender_COPING_waves_plot,
layout_matrix = COPING_waves_layout_matrix,
nrow = 2)
gender_COPING_waves_plot <- glad_coping_participation %>%
filter(gender_recode_labelled != "Non-binary/prefer to self-define") %>%
ggplot(aes(x = gender_recode_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Gender",
y = "N participants") +
ylim(0, 20000) +
scale_fill_manual(values = glad_coping_palette2) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
gender_COPING_waves_plot
demographics_COPING_waves_plot <- grid.arrange(ethnic_minority_COPING_waves_plot,
age_group_COPING_waves_plot,
employment_COPING_waves_plot,
gender_COPING_waves_plot,
layout_matrix = COPING_waves_layout_matrix,
nrow = 2)
gender_completed_baseline_plot <- glad_coping_participation %>%
filter(gender_recode_labelled != "Non-binary/prefer to self-define") %>%
ggplot(aes(x = gender_recode_labelled, fill = completed_baseline_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Gender",
y = "N participants") +
ylim(0, 20000) +
scale_fill_manual(values = glad_coping_palette2) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
gender_completed_baseline_plot
demographics_completed_baseline_plot <- grid.arrange(ethnic_minority_plot,
age_completed_baseline_plot,
employment_plot,
gender_completed_baseline_plot,
layout_matrix = plot_layout_matrix,
nrow = 2,
bottom = textGrob("Non-binary/Self-defined: Did/Did not complete baseline (244; 457)", x = 1,
hjust = 1,
gp = gpar(fontface = 3L, fontsize = 9)))
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation_raw %>%
select(all_of(sociodemographic_variable_names))
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
library(corrplot)
library(polycor)
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic)
all.p.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic$tests)
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
#Create character vector of psychiatric and health variables
psychiatric_and_health_variable_names <- c(
"phq.sum_score",
"gad.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder"
)
#Select correlation variables
psychiatric_and_health_correlation_vars <- glad_coping_participation %>%
select(all_of(psychiatric_and_health_variable_names))
#Get correlations
all.corr.mat_psychatric_and_health <- psychiatric_and_health_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix_psychiatric_and_health <- as.matrix(all.corr.mat_psychatric_and_health)
all.p.matrix_psychiatric_and_health <- as.matrix(all.corr.mat_psychatric_and_health$tests)
all.corr.matrix_psychiatric_and_health %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_psychiatric_and_health, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_psychiatric_and_health %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_psychiatric_and_health, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_psychiatric_and_health %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.3, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_psychiatric_and_health, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_psychiatric_and_health %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_psychiatric_and_health, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"startDate",
"kit_returned",
"joined_coping_first_invitation"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic)
all.p.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic$tests)
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "upper", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "left", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"kit_returned",
"joined_coping_first_invitation"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic)
all.p.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic$tests)
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
corr_simple <- function(data=df,sig=0.5){
#convert data to numeric in order to run correlations
#convert to factor first to keep the integrity of the data - each value will become a number rather than turn into NA
df_cor <- data %>% mutate_if(is.character, as.factor)
df_cor <- df_cor %>% mutate_if(is.factor, as.numeric)
#run a correlation and drop the insignificant ones
corr <- cor(df_cor)
#prepare to drop duplicates and correlations of 1
corr[lower.tri(corr,diag=TRUE)] <- NA
#drop perfect correlations
corr[corr == 1] <- NA
#turn into a 3-column table
corr <- as.data.frame(as.table(corr))
#remove the NA values from above
corr <- na.omit(corr)
#select significant values
corr <- subset(corr, abs(Freq) > sig)
#sort by highest correlation
corr <- corr[order(-abs(corr$Freq)),]
#print table
print(corr)
#turn corr back into matrix in order to plot with corrplot
mtx_corr <- reshape2::acast(corr, Var1~Var2, value.var="Freq")
#plot correlations visually
corrplot(mtx_corr, is.corr=FALSE, tl.col="black", na.label=" ")
}
all.p.matrix_sociodemographic
all.p.matrix_psychiatric_and_health
all.corr.matrix_sociodemographic
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation",
"phq.sum_score",
"gad.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic)
all.p.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic$tests)
map_chr(all.corr.matrix_sociodemographic, print)
map_chr(all.corr.matrix_sociodemographic, function(x){
if(x <= -.15 | x >= .15){
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank")
}
})
#Specify correlation variables
#Create character vector of sociodemographic variables
correlation_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation",
"phq.sum_score",
"gad.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder"
)
#Select correlation variables
glad_coping_participation_corr <- glad_coping_participation %>%
select(all_of(correlation_variable_names))
#Get correlations
all.corr.mat <- glad_coping_participation_corr %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix <- as.matrix(all.corr.mat)
all.corr.matrix
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15 | >= .15), ]
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15 | all.corr.matrix >= .15), ]
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15 |all.corr.matrix >= .15), ]
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15) | which(all.corr.matrix >= .15), ]
all.corr.matrix_subset <- all.corr.matrix[which(all.corr.matrix <= -.15), ]
which(all.corr.matrix <= -.15)
all.corr.matrix <- as_tibble(all.corr.mat)
#Create character vector of sociodemographic variables
sociodemographic_variable_names <- c(
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"dem.what_is_your_current_maritalrelationship_status",
"kit_returned",
"joined_coping_first_invitation"
)
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation %>%
select(all_of(sociodemographic_variable_names))
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.mat_sociodemographic$correlations
cor_df <- as.data.frame(as.table(all.corr.mat_sociodemographic$correlations))
cor_df
cor_df <- as.data.frame(as.table(all.corr.mat_sociodemographic$correlations))
#Filter correlations
cor_df_subset <- cor_df  %>%
arrange(desc(Freq)) %>%
filter(Freq <= -0.15 |
Freq >= 0.15)
cor_df_subset
#Filter correlations
cor_df_subset <- cor_df  %>%
arrange(desc(Freq)) %>%
filter(Freq <= -0.15 |
Freq >= 0.15 &
Freq != 1)
cor_df_subset
all.corr.matrix_test <- as.matrix(cor_df_subset)
all.corr.matrix_test
