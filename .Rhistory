#  coord_flip(ylim = c(0, 2.5)) +
#  geom_hline(yintercept = 1, color = "red", size = 1) +
#   theme(axis.title = element_text(size = 17)) +
#  theme(axis.text = element_text(size = 14))
plot_logit_model
plot_logit_model <- or_CI[-1,] %>%  #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, AOR), y = AOR)) +
geom_point(shape = 15,
size  = 4, width = 0.1,
position = "dodge", color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge", color="turquoise4") +
theme(axis.title = element_text(face = "bold")) +
xlab("Variables") + ylab("Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme(axis.title = element_text(size = 17)) +
theme(axis.text = element_text(size = 14))
plot_logit_model
plot_logit_model <- or_CI[-1,] %>%  #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, AOR), y = AOR)) +
geom_point(shape = 15,
size  = 4, width = 0.1,
position = "dodge", color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge", color="turquoise4") +
#  theme(axis.title = element_text(face = "bold")) +
xlab("Variables") + ylab("Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1)
plot_logit_model
library(sjplot)
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, AOR), y = AOR)) +
geom_point(shape = 15,
size  = 4, width = 0.1,
position = "dodge", color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge", color="turquoise4") +
xlab("Variables") + ylab("Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1)
plot_logit_model
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, AOR), y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge", color="turquoise4") +
xlab("Variables") + ylab("Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1)
plot_logit_model
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1)
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, AOR), y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge", color="turquoise4") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1)
#Check plot
plot_logit_model
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, AOR), y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge", color="turquoise4") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, AOR), y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, -AOR), y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
or_CI$variable <- factor(or_CI$variable,
levels = complete_LR_model_names)
#Check output
or_CI
or_CI$variable <- factor(or_CI$variable,
levels = c("Intercept", complete_LR_model_names))
#Get OR's and CI's for explanatory variables
or_CI <- round(exp(cbind(coef(complete_LR_model), confint(complete_LR_model))), digits=3) %>%
as.data.frame()
#Create variable column with variable names
or_CI <- or_CI %>%
mutate(variable=rownames(or_CI)) # extract the variables from rownames
#Rename and reorder columns
or_CI <- or_CI %>%
rename("AOR" = "V1",
"lower_bound" = "2.5 %",
"upper_bound" = "97.5 %"
) %>%
select(
variable,
AOR,
lower_bound,
upper_bound
)
or_CI
or_CI$variable <- factor(or_CI$variable,
levels = c("(Intercept)", complete_LR_model_names))
#Check output
or_CI
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = reorder(variable, -AOR), y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = variable, y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
or_CI
#Get OR's and CI's for explanatory variables
or_CI <- round(exp(cbind(coef(complete_LR_model), confint(complete_LR_model))), digits=3) %>%
as.data.frame()
#Create variable column with variable names
or_CI <- or_CI %>%
mutate(variable=rownames(or_CI)) # extract the variables from rownames
#Rename and reorder columns
or_CI <- or_CI %>%
rename("AOR" = "V1",
"lower_bound" = "2.5 %",
"upper_bound" = "97.5 %"
) %>%
select(
variable,
AOR,
lower_bound,
upper_bound
)
or_CI
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = variable, y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
test_or_CI <- or_CI
test_or_CI$variable <- factor(test_or_CI$variable,
levels = test_or_CI$variable)
#Check output
test_or_CI
plot_logit_model <- or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = variable, y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
?factor()
test_or_CI$variable <- factor(test_or_CI$variable,
levels = test_or_CI$variable,
ordered = TRUE)
#Check output
test_or_CI
test_or_CI$variable <- factor(test_or_CI$variable,
levels = test_or_CI$variable)
#Check output
test_or_CI
test_or_CI <- or_CI
test_or_CI$variable <- factor(test_or_CI$variable,
levels = test_or_CI$variable)
#Check output
test_or_CI
plot_logit_model <- test_or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = variable, y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
test_or_CI$variable <- factor(test_or_CI$variable,
levels = test_or_CI$variable,
ordered = TRUE)
test_or_CI <- or_CI
test_or_CI$variable <- factor(test_or_CI$variable,
levels = test_or_CI$variable,
ordered = TRUE)
#Check output
test_or_CI
plot_logit_model <- test_or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = variable, y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
test_or_CI <- or_CI
test_or_CI$variable <- factor(test_or_CI$variable,
levels = test_or_CI$variable)
#Check output
test_or_CI
plot_logit_model <- test_or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = variable, y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
plot_logit_model <- test_or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = rev(variable), y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
test_or_CI$variable <- factor(test_or_CI$variable,
levels = rev(test_or_CI$variable))
#Check output
test_or_CI
plot_logit_model <- test_or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = variable, y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
test_or_CI <- or_CI
test_or_CI$variable <- factor(test_or_CI$variable,
levels = test_or_CI$variable)
#Check output
test_or_CI
plot_logit_model <- test_or_CI %>%
slice(-1) %>% #remove row number 1 (The intercept)
ggplot(aes(x = variable, y = AOR)) +
geom_point(shape = 15,
size  = 1,
width = 0.1,
position = "dodge",
color="black") +
geom_errorbar(aes(ymin  = lower_bound,
ymax  = upper_bound),
width = 0.2,
size  = 0.7,
position = "dodge",
color= "#EFC10B") +
labs(x = "Explanatory variables",
y = "Adjusted odds ratios with 95% CI") +
coord_flip(ylim = c(0, 2.5)) +
geom_hline(yintercept = 1, color = "red", size = 1) +
theme_bw()
#Check plot
plot_logit_model
test_or_CI$variable <- factor(test_or_CI$variable,
levels = rev(levels(test_or_CI$variable)))
test_or_CI <- or_CI
test_or_CI$variable <- factor(test_or_CI$variable,
levels = rev(levels(test_or_CI$variable)))
#Check output
test_or_CI
knitr::opts_chunk$set(echo = TRUE)
remove(list = ls())
#Change it to "= 0" to turn it back on
options(scipen = 999)
#install.packages("broom")
#install.packages("knitr)
#install.packages("car")
#install.packages("rstatix")
#install.packages("pscl")
#install.packages("boot")
#install.packages("stats")
#install.packages("rcompanion")
#install.packages("MASS")
#install.packages("openxlsx")
#install.packages("tidyverse")
library(broom)
library(knitr)
library(car)
library(rstatix)
library(pscl)
library(boot)
library(stats)
library(rcompanion)
library(MASS)
library(openxlsx)
library(tidyverse)
source("..//COPING_participation_paths.r")
source("..//COPING_participation_functions.r")
glad_coping_participation <- read_rds(paste0(processed_data_path, processed_data_name))
#Check data
glad_coping_participation %>%
head()
glad_coping_participation %>%
group_by(depressive_and_anxiety_comorbidity_labelled) %>%
summary(PTSD_labelled)
glad_coping_participation %>%
group_by(depressive_and_anxiety_comorbidity_labelled) %>%
summary(PTSD_labelled)
glad_coping_participation %>%
group_by(depressive_and_anxiety_comorbidity_labelled) %>%
count(PTSD_labelled)
glad_coping_participation %>%
group_by(PTSD_labelled) %>%
count(depressive_and_anxiety_comorbidity_labelled)
glad_coping_participation %>%
group_by(PTSD_labelled) %>%
count()
glad_coping_participation %>%
group_by(PTSD_labelled) %>%
count(depressive_and_anxiety_comorbidity_labelled)
