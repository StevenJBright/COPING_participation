#Create kable output
sociodemographic_LR_model_kable <- kable(sociodemographic_LR_model_tidy[-c(1), ],
digits = 2)
#Need to add physical health comorbidity variable
psychiatric_and_health_LR_model <- glm(
formula = completed_baseline ~ phq.sum_score +
gad.sum_score +
audit.sum_score +
dem.select_the_box_that_best_describes_you +
physical_health_comorbidities +
mental_health_comorbidities +
depressive_and_anxiety_comorbidity +
eating_disorders +
OCRDs +
psychotic_and_biploar_disorder +
mhd.asd +
mhd.addadhd +
mhd.personality_disorder,
family = "binomial",
data = glad_coping_participation_raw)
#Check output
summary(psychiatric_and_health_LR_model)
#Put psychiatric and health variable names into vector in order that they appear in summary(model2)
psychiatric_and_health_variable_names <- c(
"Intercept",
"gad.sum_score",
"phq.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder"
)
#Create tidy model output
psychiatric_and_health_LR_model_tidy <- tidy(
psychiatric_and_health_LR_model,
exponentiate = T,
conf.int = T) %>%
mutate(
Variable = psychiatric_and_health_variable_names,
Significance = if_else(
p.value < 0.05,
1,
0
) %>%
recode_factor(
"0" = "Not-significant",
"1" = "Significant"
)) %>%
select(
Variable,
OR = estimate,
`CI 95% lower` = conf.low,
`CI 95% upper` = conf.high,
`p value` = p.value,
Significance
)
psychiatric_and_health_LR_model_tidy %>%
head(14)
#Create kable output
psychiatric_and_health_LR_model_kable <- kable(psychiatric_and_health_LR_model_tidy[-c(1), ],
digits = 2)
glad_study_variables_LR_model <- glm(
formula = completed_baseline ~ startDate +
kit_returned +
joined_coping_first_invitation,
family = "binomial",
data = glad_coping_participation_raw)
#Check output
summary(glad_study_variables_LR_model)
#Put glad study variable names into vector in order that they appear in summary(model3)
glad_study_variable_names <- c(
"Intercept",
"startDate",
"kit_returned",
"joined_coping_first_invitation"
)
#Create tidy model output
glad_study_variables_LR_model_tidy <- tidy(
glad_study_variables_LR_model,
exponentiate = T,
conf.int = T) %>%
mutate(
Variable = glad_study_variable_names,
Significance = if_else(
p.value < 0.05,
1,
0
) %>%
recode_factor(
"0" = "Not-significant",
"1" = "Significant"
)) %>%
select(
Variable,
OR = estimate,
`CI 95% lower` = conf.low,
`CI 95% upper` = conf.high,
`p value` = p.value,
Significance
)
glad_study_variables_LR_model_tidy %>%
head()
#Create kable output
glad_study_variables_LR_model_kable <- kable(glad_study_variables_LR_model_tidy[-c(1), ],
digits = 2)
complete_LR_model <- glm(
formula = completed_baseline ~ age_cleaned +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status +
phq.sum_score +
gad.sum_score +
audit.sum_score +
dem.select_the_box_that_best_describes_you +
physical_health_comorbidities +
mental_health_comorbidities +
depressive_and_anxiety_comorbidity +
eating_disorders +
OCRDs +
psychotic_and_biploar_disorder +
mhd.asd +
mhd.addadhd +
mhd.personality_disorder +
startDate +
kit_returned +
joined_coping_first_invitation,
family = "binomial",
data = glad_coping_participation_raw)
#Check output
summary(complete_LR_model)
#Put all LR variable names into vector in the order they appear in summary(model4)
complete_LR_model_names <- c(
"Intercept",
"age_cleaned",
"gender_recode",
"highest_education",
"dem.questions_based_ethnic_origin",
"dem.what_is_your_current_employment_status",
"partnership_status",
"phq.sum_score",
"gad.sum_score",
"audit.sum_score",
"dem.select_the_box_that_best_describes_you",
"physical_health_comorbidities",
"mental_health_comorbidities",
"depressive_and_anxiety_comorbidity",
"eating_disorders",
"OCRDs",
"psychotic_and_biploar_disorder",
"mhd.asd",
"mhd.addadhd",
"mhd.personality_disorder",
"startDate",
"kit_returned",
"joined_coping_first_invitation"
)
#Create tidy model output
complete_LR_model_tidy <- tidy(
complete_LR_model,
exponentiate = T,
conf.int = T) %>%
mutate(
Variable = complete_LR_model_names,
Significance = if_else(
p.value < 0.05,
1,
0
) %>%
recode_factor(
"0" = "Not-significant",
"1" = "Significant"
)) %>%
select(
Variable,
OR = estimate,
`CI 95% lower` = conf.low,
`CI 95% upper` = conf.high,
`p value` = p.value,
Significance
)
complete_LR_model_tidy %>%
head(23)
#Create kable output
complete_LR_model_kable <- kable(complete_LR_model_tidy[-c(1), ],
digits = 2)
complete_LR_model_VIF <- complete_LR_model %>%
vif()
complete_LR_model_VIF
#Select correlation variables
sociodemographic_correlation_vars <- glad_coping_participation_raw %>%
select(sociodemographic_variable_names[-1]) #Remove "Intercept"
#Get correlations
all.corr.mat_sociodemographic <- sociodemographic_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic)
all.corr.matrix_sociodemographic$tests
all.corr.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic)
all.p.matrix_sociodemographic <- as.matrix(all.corr.matrix_sociodemographic$tests)
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.8, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic)
all.p.matrix_sociodemographic <- as.matrix(all.corr.mat_sociodemographic$tests)
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.8, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
#Select correlation variables
psychiatric_and_health_correlation_vars <- glad_coping_participation_raw %>%
select(psychiatric_and_health_variable_names[-1]) #Remove "Intercept"
#Get correlations
all.corr.mat_psychatric_and_health <- psychiatric_and_health_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix_psychiatric_and_health <- as.matrix(all.corr.mat_psychatric_and_health)
all.p.matrix_psychiatric_and_health <- as.matrix(all.corr.mat_psychatric_and_health$tests)
all.corr.matrix_psychiatric_and_health %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.8, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_psychiatric_and_health, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_psychiatric_and_health %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.5, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_psychiatric_and_health, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_psychiatric_and_health %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.6, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_psychiatric_and_health, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
all.corr.matrix_sociodemographic %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_sociodemographic, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
psychiatric_and_health_variable_names
glad_study_variable_names
#Select correlation variables
glad_study_variables_correlation_vars <- glad_coping_participation_raw %>%
select(glad_study_variable_names[-1], #Remove Intercept
-startDate)
#Get correlations
all.corr.mat_glad_study_variables <- glad_study_variables_correlation_vars %>%
hetcor(use = "pairwise.complete.obs")
all.corr.matrix_glad_study_vars <- as.matrix(all.corr.mat_glad_study_variables)
all.p.matrix_glad_study_vars <- as.matrix(all.corr.mat_glad_study_variables$tests)
all.corr.matrix_glad_study_vars %>%
corrplot(method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.7, #size of text
tl.col = "black",
col=colorRampPalette(c("dodgerblue4",
"white",
"firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = all.p.matrix_glad_study_vars, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank") # Nonsignificant correlations have no colour
sociodemographic_LR_model_cooksD <- cooks.distance(sociodemographic_LR_model)
#Plot Cook's Distance with a horizontal line at 4/n to see which observations
#exceed this thresdhold
n <- glad_coping_participation_raw %>%
nrow()
n
plot(sociodemographic_LR_model_cooksD, main = "Cooks Distance for Influential Obs")
abline(h = 4/n, lty = 2, col = "steelblue")
cooksD_plot <- function(data, model){
#Calculate cooks distance in model
cooksD <- cooks.distance(model)
#Get N of data
n <- nrow(data)
#Create cooks distance plot
plot(cooksD,
main = "Cooks Distance for Influential Obs")
abline(h = 4/n, lty = 2, col = "steelblue") #add cutoff line
}
cooksD_plot(data = glad_coping_participation_raw,
model = sociodemographic_LR_model)
cooksD_plot(data = glad_coping_participation_raw,
model = psychiatric_and_health_LR_model)
cooksD_plot(data = glad_coping_participation_raw,
model = glad_study_variables_LR_model)
sociodemographic_logodds <- sociodemographic_LR_model$linear.predictors
sociodemographic_variable_names
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status,
data = glad_coping_participation_raw)
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status,
data = glad_coping_participation_raw)
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned)
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned,
data = glad_coping_participation_raw)
sociodemographic_logodds
length(sociodemographic_logodds)
length(sociodemographic_logodds)
length(glad_coping_participation_raw$age_cleaned)
length(na.omit(glad_coping_participation_raw$age_cleaned))
length(sociodemographic_logodds)
length(na.omit(glad_coping_participation_raw$age_cleaned))
length(glad_coping_participation_raw$age_cleaned)
length(glad_coping_participation_raw$gender_recode)
length(glad_coping_participation_raw$highest_education)
psychiatric_and_health_variable_names
sociodemographic_variable_names
lreg <- glm(completed_baseline ~ age_cleaned +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status,
family = binomial(link="logit"),
data = glad_coping_participation_raw)
#Get log odds
sociodemographic_logodds <- lreg$linear.predictors
length(sociodemographic_logodds)
length(glad_coping_participation_raw$highest_education)
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status,
data = glad_coping_participation_raw)
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status,
data = lreg)
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status,
data = glad_coping_participation_raw)
length(na.rm(glad_coping_participation_raw$highest_education))
length(drop_na(glad_coping_participation_raw$highest_education))
#Get probabilities and logit values
sociodemographic_probabilities <- predict(sociodemographic_LR_model,
type = "response")
sociodemographic_probabilities
length(sociodemographic_probabilities)
sociodemographic_logit <- log(sociodemographic_probabilities/(1-sociodemographic_probabilities))
head(sociodemographic_logit)
#Plot logit against our IVs
glad_coping_participation_raw %>%
ggplot(aes(logit, age_cleaned)) +
geom_point() +
geom_smooth(method = "loess") +
theme_bw()
logit(completed_baseline ~ age_cleaned +
age_cleaned:log(age_cleaned),
data = glad_coping_participation_raw)
logit(completed_baseline ~ age_cleaned +
age_cleaned:log(age_cleaned),
data = glad_coping_participation_raw)
Logit(completed_baseline ~ age_cleaned +
age_cleaned:log(age_cleaned),
data = glad_coping_participation_raw)
logit(completed_baseline ~ age_cleaned +
age_cleaned:log(age_cleaned),
data = glad_coping_participation_raw,
brief = TRUE)
logit(completed_baseline ~ age_cleaned +
age_cleaned:log(age_cleaned),
data = glad_coping_participation_raw)
logit(completed_baseline ~ age_cleaned +
age_cleaned:log(age_cleaned))
#Get log odds
sociodemographic_logodds <- sociodemographic_LR_model$linear.predictors
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status,
data = glad_coping_participation_raw)
?complete.cases()
#Run box-Tidwell test
boxTidwell(sociodemographic_logodds ~ age_cleaned,
data = glad_coping_participation_raw)
glad_coping_participation_raw$age_quartiles <- cut(glad_coping_participation_raw$age_cleaned,
breaks = quantile(glad_coping_participation_raw$age_cleaned),
labels = c("Q1","Q2","Q3","Q4"),
right = FALSE, include.lowest = TRUE)
summary(glad_coping_participation_raw$age_quartiles)
test <- glm(
formula = completed_baseline ~ age_cleaned * log(age_cleaned)
family = "binomial",
test <- glm(
formula = completed_baseline ~ age_cleaned * log(age_cleaned),
family = "binomial",
data = glad_coping_participation_raw)
#Check output
summary(test)
boxTidwell(sociodemographic_LR_model$linear.predictors ~ age_cleaned)
boxTidwell(sociodemographic_LR_model$linear.predictors ~ age_cleaned,
data = glad_coping_participation_raw)
sociodemographic_LR_model$data
sociodemographic_LR_linearity_test <- glm(
formula = completed_baseline ~ age_cleaned + age_cleaned * log(age_cleaned) +
gender_recode +
highest_education +
dem.questions_based_ethnic_origin +
dem.what_is_your_current_employment_status +
partnership_status,
family = "binomial",
data = glad_coping_participation_raw)
#Check output
summary(sociodemographic_LR_linearity_test)
sociodemographic_LR_linearity_test <- glm(
formula = completed_baseline ~ age_cleaned + age_cleaned * log(age_cleaned),
family = "binomial",
data = glad_coping_participation_raw)
#Check output
summary(sociodemographic_LR_linearity_test)
pwd
getwd()
