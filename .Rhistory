geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10), len = 2)
continuous_vars_subset %>%
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10, len = 2))
continuous_vars_subset %>%
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>%
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10)) +
stat_bin(aes(y=..count.., label=..count..), geom="text", vjust=-.5)
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10)) +
geom_text(aes(label=Freq), vjust=-1, size=3)
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=..count..), geom="text", vjust=-.5) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)), geom="text", vjust=-.5) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)), geom="text", vjust=.5) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)), geom="text", vjust=-.6) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = 1) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = -11) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = -1) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = -0.5) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = -0.2) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = -0.1) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = -0.05) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = -0) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = 0) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = 0.1) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = 0.5) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = 0.4) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = 0.3) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = 0.2) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6,
hjust = 0.1) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.6) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.5) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
continuous_vars_subset %>%
ggplot(aes(x = age_cleaned)) +
geom_histogram(bins = 20, colour = "Black", fill = "#EFC10B") +
stat_bin(aes(y=..count.., label=ifelse(..count.. == 0, "", ..count..)),
geom="text",
vjust=-.5) +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
continuous_vars_subset %>%
ggplot(aes(x = age_cleaned)) +
geom_histogram(bins = 20, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
continuous_vars_subset %>%
na.omit(MH_disorders_total_count) %>% # Remove cases with NAs
ggplot(aes(x = MH_disorders_total_count)) +
geom_histogram(bins = 10, colour = "Black", fill = "#EFC10B") +
theme_minimal() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
scale_x_continuous(breaks = seq(0, 10))
knitr::opts_chunk$set(echo = TRUE)
remove(list = ls())
#install.packages("cowplot")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("gtsummary")
#install.packages("corrplot")
#install.packages("polycor")
#install.packages("tidyverse")
library(cowplot)
library(grid)
library(gridExtra)
library(gtsummary)
library(corrplot)
library(polycor)
library(tidyverse)
glad_colour <- "#EFC10B"
glad_coping_palette2 <- c("#EFC10B", "#B7DEE8")
glad_coping_palette3 <- c("#EFC10B", "#B7DEE8", "#0403ff")
source("..//COPING_participation_functions.r")
source("..//COPING_participation_paths.r")
glad_coping_participation <- read_rds(paste0(processed_data_path, processed_data_name))
#Check data
glad_coping_participation %>%
head()
age_group_COPING_waves_plot <- glad_coping_participation %>%
ggplot(aes(x = age_groups_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Age (years)",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette3) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 70, vjust = 0.5)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
age_group_COPING_waves_plot
gender_COPING_waves_plot <- glad_coping_participation %>%
filter(gender_recode_labelled != "Non-binary/prefer to self-define") %>%
ggplot(aes(x = gender_recode_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Gender",
y = "N participants") +
ylim(0, 20000) +
scale_fill_manual(values = glad_coping_palette2) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
gender_COPING_waves_plot
employment_COPING_waves_plot <- glad_coping_participation %>%
drop_na(employment_labelled) %>%
ggplot(aes(x = employment_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Employment status",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 3),
labels = employment_labels) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
ethnicity_COPING_waves_plot <- glad_coping_participation %>%
drop_na(ethnicity_labelled) %>%
ggplot(aes(x = ethnicity_labelled, fill = total_COPING_waves_binary_labelled)) +
geom_bar(position = "dodge") +
labs(x = "Ethnic identity",
y = "N participants") +
scale_fill_manual(values = glad_coping_palette2) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme_classic() +
theme(legend.position = "none") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#Check plot
ethnicity_COPING_waves_plot
knitr::opts_chunk$set(echo = TRUE)
remove(list = ls())
#install.packages("cowplot")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("gtsummary")
#install.packages("corrplot")
#install.packages("polycor")
#install.packages("tidyverse")
library(cowplot)
library(grid)
library(gridExtra)
library(gtsummary)
library(corrplot)
library(polycor)
library(tidyverse)
glad_colour <- "#EFC10B"
glad_coping_palette2 <- c("#EFC10B", "#B7DEE8")
glad_coping_palette3 <- c("#EFC10B", "#B7DEE8", "#0403ff")
source("..//COPING_participation_functions.r")
source("..//COPING_participation_paths.r")
glad_coping_participation <- read_rds(paste0(processed_data_path, processed_data_name))
#Check data
glad_coping_participation %>%
head()
glad_coping_participation %>%
group_by(total_COPING_waves) %>%
count()
#Number or participants who completed baseline but no follow-up surveys
N_no_followups <- glad_coping_participation %>%
filter(completed_baseline == 1,
total_COPING_waves == 0) %>%
nrow()
#Number of participants who completed baseline survey and at least one survey
N_followups <- glad_coping_participation %>%
filter(completed_baseline == 1,
total_COPING_waves != 0) %>%
nrow()
#Check results
N_no_followups
N_followups
glad_coping_participation %>%
drop_na(total_COPING_waves) %>%
ggplot(aes(x = total_COPING_waves)) +
geom_bar(fill = glad_colour,
colour = "black") +
labs(#title = "Distribution of completed follow-up surveys amongst GLAD Study participants",
#subtitle = paste0("No. of pt's who completed at least one follow-up: ", N_followups),
#caption = paste0("No. of pt's completing no surveys: ", N_no_followups),
y = "N",
x = "No. of surveys completed") +
scale_x_continuous(limits = c(NA, NA),
breaks = seq(0, 14, 1)) +
scale_y_continuous(limits = c(0, 2000),
breaks = seq(0, 2000, 500)) +
geom_text(aes(y = ..prop..,
label = ..count..),
stat = "count",
vjust = -1,
nudge_y = .01) +
theme_bw()
glad_coping_participation %>%
drop_na(total_COPING_waves) %>%
ggplot(aes(x = total_COPING_waves)) +
geom_bar(fill = glad_colour,
colour = "black") +
labs(#title = "Distribution of completed follow-up surveys amongst GLAD Study participants",
#subtitle = paste0("No. of pt's who completed at least one follow-up: ", N_followups),
#caption = paste0("No. of pt's completing no surveys: ", N_no_followups),
y = "N",
x = "No. of surveys completed") +
scale_x_continuous(limits = c(NA, NA),
breaks = seq(0, 14, 1)) +
scale_y_continuous(limits = c(0, 2000),
breaks = seq(0, 2000, 500)) +
geom_text(aes(y = ..prop..,
label = ..count..),
stat = "count",
vjust = -1,
nudge_y = .01) +
theme_bw() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
COPING_followups_completed_plot <- glad_coping_participation %>%
drop_na(total_COPING_waves) %>%
ggplot(aes(x = total_COPING_waves)) +
geom_bar(fill = glad_colour,
colour = "black") +
labs(#title = "Distribution of completed follow-up surveys amongst GLAD Study participants",
#subtitle = paste0("No. of pt's who completed at least one follow-up: ", N_followups),
#caption = paste0("No. of pt's completing no surveys: ", N_no_followups),
y = "N",
x = "No. of surveys completed") +
scale_x_continuous(limits = c(NA, NA),
breaks = seq(0, 14, 1)) +
scale_y_continuous(limits = c(0, 2000),
breaks = seq(0, 2000, 500)) +
geom_text(aes(y = ..prop..,
label = ..count..),
stat = "count",
vjust = -1,
nudge_y = .01) +
theme_bw() +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
COPING_followups_completed_plot
ggsave("../COPING_followups_completed.png",
path = figure_path,
plot = COPING_followups_completed_plot,
width = 10,
height = 6,
dpi = 150,
units = "in")
ggsave("../COPING_followups_completed.png",
plot = COPING_followups_completed_plot,
width = 10,
height = 6,
dpi = 150,
units = "in")
